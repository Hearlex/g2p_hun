[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "g2p"
dynamic = ["version"]
description = "Module for creating context-aware, rule-based G2P mappings that preserve indices"
readme = "README.md"
license = "MIT"
requires-python = ">= 3.7"
authors = [
    { name = "Aidan Pine", email = "hello@aidanpine.ca" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "click>=8.0.4",
    "coloredlogs<=14.0",
    "dnspython>=2.1.0,<=2.3.0",
    "eventlet>=0.33.0,!=0.36.0",
    "flask-cors>=3.0.9",
    "flask-restful>=0.3.9",
    "flask-talisman>=0.7.0",
    "flask<2.3; python_version < '3.8'",
    "flask; python_version >= '3.8'",
    "flask_socketio>=5.0.0",
    "networkx>=2.6",
    "numpy>=1.20.2,<2",
    "openpyxl",
    "panphon>=0.19",
    "pydantic>=2.3",
    "python-engineio>=4.0.0",
    "python-socketio>=5.0.0",
    "pyyaml>=5.2",
    "regex",
    "requests",
    "text_unidecode",
    "tqdm",
]

[project.scripts]
g2p = "g2p.cli:cli"

[project.urls]
Homepage = "https://github.com/roedoejet/g2p"

[tool.setuptools]
packages = ["g2p"]
include-package-data = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "g2p/_version.py"
template = """
# file generated by setuptools_scm
# don't change, don't track in version control
TYPE_CHECKING = False
if TYPE_CHECKING:
    from typing import Tuple, Union
    VERSION_TUPLE = Tuple[Union[int, str], ...]
else:
    VERSION_TUPLE = object

VERSION: str
version: str
__version__: str
__version_tuple__: VERSION_TUPLE
version_tuple: VERSION_TUPLE

VERSION = __version__ = version = {version!r}
__version_tuple__ = version_tuple = {version_tuple!r}
"""

[tool.hatch.build.targets.sdist]
include = [
    "/g2p",
]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "playwright>=1.26.1",
  "jsonschema>=4.17.3",
  "pep440>=0.1.2",
  "black>=23; python_version < '3.8'",
  "black>24.2; python_version >= '3.8'",
  "flake8>=4.0.1",
  "gitlint-core==0.17.0",
  "isort>=5.10.1",
  "mypy>=1; python_version < '3.8'",
  "mypy>=1.8.0; python_version >= '3.8'",
  "pre-commit>=2.6.0",
]

[tool.hatch.envs.default.scripts]
serve = "flask --app g2p.app run"
routes = "flask --app g2p.app routes"
serve-cov = "coverage run -m flask --app g2p.app run"
test = "python run_tests.py dev"
test-cov = "coverage run run_tests.py dev"
test-studio = "python g2p/tests/test_studio.py"
check = "mypy --install-types --non-interactive {args:g2p}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[tool.hatch.envs.prod]
dependencies = [
  "gunicorn>=21.1.0",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.coverage.run]
source_pkgs = ["g2p"]
branch = true
parallel = true
omit = [
  "g2p/_version.py",
  "g2p/tests",
]

[tool.coverage.report]
precision = 2

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.isort]
profile = "black"
